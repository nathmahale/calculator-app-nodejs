name: CalculatorJS-Build-Push

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  npmLocalBuildJob:
    if: ${{ github.event.head_commit.message != 'test' }}
    name: npmLocalBuildJob
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        check-latest: false

    - name: Local Test Build
      run: |
        npm config set fund false --location=global  
        npm update
        npm install --package-lock
        npm ls
        npm run-script build
        
    - name: Run Tests
      run: |
        npm test
        
    - name: Setup git Config locally on Github Runner
      run: |
        git config --global user.email "gh.actions@github.com"
        git config --global user.name "GH Actions User"
        # echo "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
    
    - name: Bump up package version based on version.txt value
      run: |
        VERSION_INFO=$(cat ${GITHUB_WORKSPACE}/version.txt)
        echo ${VERSION_INFO}
        grunt bump:${VERSION_INFO}
        
    - name: Clean-up devDependencies
      run: |
        npm prune --production
        npm pkg fix

    - name: Publish NPM package
      uses: JS-DevTools/npm-publish@v3
      with:
        token: ${{ secrets.NPM_REPO_ACCESS_TOKEN }}
        provenance: true
        access: public
        ignore-scripts: true

  dockerBuildAndPushJob:
    if: ${{ github.event.head_commit.message != 'test' }}
    name: dockerBuildAndPushJob
    runs-on: ubuntu-latest
    needs: npmLocalBuildJob
    
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Load Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/calculator-example-app
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Scrape build info
        id: vars
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "COMMIT_SHORT_SHA=${GITHUB_SHA:0:6}" >> $GITHUB_ENV
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          no-cache: true
          tags: ${{ secrets.DOCKER_USERNAME }}/calculator-example-app:scm-sha-${{ env.COMMIT_SHORT_SHA }}, ${{ secrets.DOCKER_USERNAME }}/calculator-example-app:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_VERSION_TAG=${{ env.RELEASE_VERSION }}
            GIT_COMMIT_MESSAGE=${{ github.event.head_commit.message }}
            GIT_VERSION_HASH=${{ github.sha }}
